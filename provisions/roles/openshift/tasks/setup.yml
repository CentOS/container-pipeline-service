---
- name: Setup openshift registry
  command: "{{item}}"
  with_items:
    - oc adm registry --config={{ kubeconfig }}
    - oadm policy add-scc-to-group anyuid system:authenticated
  environment:
    KUBECONFIG: "{{ kubeconfig }}"

- name: Wait for Openshift Registry to come up
  pause: seconds={{ openshift_startup_delay }}

- name: Setup openshift router
  shell: "{{ item }}"
  with_items:
    - oc get scc privileged -o json --config={{ kubeconfig }}| sed '/\"users\"/a \"system:serviceaccount:default:router\",' | oc --config={{ kubeconfig }} replace scc privileged -f -
    - oadm router --config={{ kubeconfig }} --service-account=router
  environment:
    KUBECONFIG: "{{ kubeconfig }}"

- name: Wait for Openshift Router to come up
  pause: seconds={{ openshift_startup_delay }}

- name: Create test user and add role to user
  command: "{{ item }}"
  with_items:
    - "oadm policy add-cluster-role-to-user system:build-strategy-custom test-admin --config={{ kubeconfig }}"
    - "oadm policy add-role-to-user admin test-admin --config={{ kubeconfig }}"
  environment:
    KUBECONFIG: "{{ kubeconfig }}"

- name: Create image pruner for cleaning up the system
  command: "{{ item }}"
  with_items:
    - "oadm policy add-cluster-role-to-user system:image-pruner imageprune --config={{ kubeconfig }}"
  environment:
    KUBECONFIG: "{{ kubeconfig }}"
  ignore_errors: yes

- name: Get cccp service code
  synchronize:
    src: "{{ role_path }}/../../../"
    dest: "{{ ansible_env.HOME }}/cccp-service"
    mode: push

- name: Build cccp build image
  docker_image:
    path: "{{ ansible_env.HOME }}/cccp-service/server"
    name: cccp-build
    dockerfile: Dockerfile.build

- name: Build cccp test image
  docker_image:
    path: "{{ ansible_env.HOME }}/cccp-service/server"
    name: cccp-test
    dockerfile: Dockerfile.test

- name: Build cccp delivery image
  docker_image:
    path: "{{ ansible_env.HOME }}/cccp-service/server"
    name: cccp-delivery
    dockerfile: Dockerfile.delivery
