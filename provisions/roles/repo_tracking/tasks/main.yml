---
- name: Enable epel
  yum: name=epel-release state=installed
  sudo: yes
  tags: repo_tracking

- name: Ensure that user jenkins is included in docker group
  user: name=jenkins groups=docker append=yes
  sudo: yes
  tags: repo_tracking

- name: Enable Docker Registry
  lineinfile:
      dest: /etc/sysconfig/docker
      line: 'ADD_REGISTRY="--insecure-registry {{ intranet_registry }} --add-registry {{ public_registry }} --add-registry registry.centos.org"'
  tags: repo_tracking

- name: Enable access to Docker daemon over TCP in localhost
  replace: >
    dest=/etc/sysconfig/docker
    regexp="^\s*OPTIONS=.*"
    replace="OPTIONS='--selinux-enabled --log-driver=journald --signature-verification=false -H localhost:2367 -H unix:///var/run/docker.sock'"
  sudo: yes

- name: Enable and start Docker service
  service: name=docker state=started
  sudo: yes
  tags: repo_tracking

- name: Install fedmsg and utils
  yum: name={{ item }} state=installed
  sudo: yes
  with_items:
    - fedmsg
    - fedmsg-relay
  tags: repo_tracking

- name: Don't validate fedmsg signatures
  replace:
      dest: /etc/fedmsg.d/ssl.py
      regexp: "validate_signatures=True"
      replace: "validate_signatures=False"
  sudo: yes
  tags: repo_tracking

- name: Ensure jenkinsbuilder is a package
  file: path=/opt/cccp-service/jenkinsbuilder/__init__.py state=touch
  sudo: yes
  tags: repo_tracking

- name: Ensure repo data dir exists
  file: path=/opt/cccp-service/container_pipeline/tracking/data state=directory
  sudo: yes
  tags: repo_tracking

- name: Ensure cccp data dir exists
  file: path=/var/lib/cccp/db state=directory
  sudo: yes
  tags: repo_tracking

- name: Set selinux context for datadir for mounting in containers
  sefcontext:
      target: '/var/lib/cccp/db(/.*)?'
      setype: svirt_sandbox_file_t
      state: present
  sudo: yes
  tags: repo_tracking

- name: Pull CentOS postgres container
  docker_image:
      name: docker.io/centos/postgresql-95-centos7
      tag: latest
  sudo: yes
  tags: repo_tracking

- name: Run postgres container
  docker_container:
      name: postgres
      image: registry.centos.org/sclo/postgresql-95-centos7
      volumes:
          - /var/lib/cccp/db:/var/lib/postgresql/data
      ports:
          - "{{ db_host }}:{{ db_port }}:5432"
      env:
          POSTGRESQL_USER: '{{ db_user }}'
          POSTGRESQL_PASSWORD: '{{ db_pass }}'
          POSTGRESQL_DATABASE: '{{ db_name }}'
      state: started
      restart_policy: on-failure
  sudo: yes
  tags: repo_tracking

- name: Wait for 20 seconds for the db to come up
  pause:
      seconds: 20
  tags: repo_tracking

- name: Create DB tables
  shell: /opt/cccp-service/manage.py syncdb --noinput
  ignore_errors: yes
  retries: 5
  delay: 10
  sudo: yes
  tags: repo_tracking

- name: Copy fedmsg conf
  copy:
      src: "{{ role_path }}/../../../fedmsg.d/container_pipeline.py"
      dest: "/etc/fedmsg.d/container_pipeline.py"
  sudo: yes
  tags: repo_tracking

- name: Copy empty fedmsg endpoints conf
  copy:
      src: fedmsg_endpoints.py
      dest: /etc/fedmsg.d/endpoints.py
  sudo: yes
  tags: repo_tracking

- name: Start fedmsg-relay
  service: name=fedmsg-relay state=restarted enabled=True
  sudo: yes
  tags: repo_tracking

- name: Get container index
  git:
    repo: https://github.com/rtnpro/container-index
    dest: /opt/container-index
  sudo: yes
  tags: repo_tracking

- name: Ensure jenkins user can write to log file
  file: path=/srv/pipeline-logs/cccp.log state=file owner=jenkins
  sudo: yes
  tags: repo_tracking

- name: Copy jenkins job template
  template: src=jobs.yml.j2 dest="{{ ansible_env.HOME }}/repo_tracking_job.yml"
  sudo: yes
  tags: repo_tracking

- name: Ensure jenkins user is owner of src dir
  file:
      path: /opt/cccp-service/
      owner: jenkins
      recurse: yes
  sudo: yes
  tags: repo_tracking

- name: Create jenkins jobs
  shell: "jenkins-jobs --ignore-cache update {{ ansible_env.HOME }}/repo_tracking_job.yml"
  tags: repo_tracking

- name: Copy servie files
  copy: src="{{ role_path }}/../../../scripts/{{ item }}" dest=/etc/systemd/system/ mode=u+x
  with_items:
      - cccp_pkgupdatelistener.service
      - cccp_triggerbuilds.service
      - cccp_imagescanner.service
  sudo: yes
  tags: repo_tracking
  register: service_files_updated

- name: systemctl daemon-reload
  shell: systemctl daemon-reload
  sudo: yes
  when: service_files_updated

- name: Enable and start services
  service: name={{ item }} state=restarted enabled=yes
  with_items:
      - cccp_pkgupdatelistener
      - cccp_triggerbuilds
      - cccp_imagescanner
  sudo: yes
  tags: repo_tracking
