---
- name: Check if NFS backup directory exists on node
  become: true
  stat:
    path: '{{db_backup_nfs_path}}'
  register: nfs_dir_mounted
  when: not test
  tags: db

- name: Fail if NFS share is not mounted on node for db backup
  become: true
  fail:
    msg: "NFS share is not mounted on node for db backup."
  when:
    - not test
    - not nfs_dir_mounted
  tags: db

- name: Ensure local dir exists on node for db volume sharing
  file:
    path: '{{ db_local_volume }}'
    state: directory
    mode: 0766
  become: true
  tags: db

- name: Set ACL for local dir for volumen sharing
  become: true
  shell: "setfacl -m u:{{ postgresql_uid }}:-wx {{ db_local_volume }}"
  tags: db

- name: Reload docker systemd service
  become: true
  systemd: name=docker state=reloaded

- name: Start Docker service
  become: true
  systemd: name=docker state=started enabled=yes

- name: Pull CentOS postgres container
  docker_image:
      name: '{{ postgresql_image }}'
      tag: latest
      state: present
      force: yes
  become: true
  tags: db

- name: Run postgres container
  docker_container:
      name: postgres
      image: '{{ postgresql_image }}'
      volumes:
        - "{{ db_local_volume }}:/var/lib/pgsql/data:Z"
      ports:
        - "{{ db_host }}:{{ db_port }}:5432"
      env:
          POSTGRESQL_USER: '{{ db_user }}'
          POSTGRESQL_PASSWORD: '{{ db_pass }}'
          POSTGRESQL_DATABASE: '{{ db_name }}'
      state: started
      restart_policy: on-failure
  become: true
  tags: db

- name: Wait for 20 seconds for the db to come up
  pause:
      seconds: 20
  tags: db

- name: Copy cron script to have postgresql db backups
  become: true
  template: src=cccp_db_pg_dump_cron.sh.j2 dest=/root/cccp_db_pg_dump_cron.sh mode=0755
  tags:
    - db
    - cron

- name: Cron job for postgresql db backups hourly
  become: true
  cron:
      name: "Postgresql cccp db hourly backup"
      job: "/root/cccp_db_pg_dump_cron.sh"
      special_time: hourly
  tags:
    - db
    - cron

- name: Copy cron script to check if the pg-dump exported latest tar file is readable
  become: true
  template: src=cron_cccp_db_read_check.sh.j2 dest=/root/cron_cccp_db_read_check.sh mode=0755
  tags:
    - db
    - cron

- name: Cron job for postgresql db backups hourly
  become: true
  cron:
      name: "Postgresql cccp database tar readability check"
      job: "/root/cron_cccp_db_read_check.sh"
      special_time: daily
  tags:
    - db
    - cron

- name: Copy cron script to delete old pg_dump tar files
  become: true
  template: src=cron_delete_pg_dump_tars.sh.j2 dest=/root/cron_delete_pg_dump_tars.sh mode=0755
  tags:
    - db
    - cron

- name: Cron job to delete old pg_dump tar files daily
  become: true
  cron:
      name: "Cron to delete old pg_dump tar files daily"
      job: "/root/cron_delete_pg_dump_tars.sh"
      special_time: daily
  tags:
    - db
    - cron
