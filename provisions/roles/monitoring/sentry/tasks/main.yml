---
- name: Ensure redis container image is present
  docker_image:
      name: registry.centos.org/centos/redis:latest
  become: true

- name: Copy redis conf file
  shell: >
      docker run --rm --entrypoint cat registry.centos.org/centos/redis:latest /redis-master/redis.conf > {{ ansible_env.HOME }}/redis.conf
  become: true

- name: Disable redis protection-mode in conf
  lineinfile: dest="{{ ansible_env.HOME }}/redis.conf" regexp="protected-mode" line="protected-mode no"
  become: true

- name: Run sentry redis container
  docker_container:
      image: registry.centos.org/centos/redis:latest
      name: sentry-redis
      env:
          MASTER: 'true'
      ports:
          - "6379:6379"
      volumes:
          - "{{ ansible_env.HOME }}/redis.conf:/redis-master/redis.conf"
  become: true

- name: Run sentry postgres container
  docker_container:
      image: registry.centos.org/postgresql/postgresql:9.6
      name: sentry-postgres
      env:
          POSTGRESQL_PASSWORD: '{{ sentry_db_password }}'
          POSTGRESQL_USER: '{{ sentry_db_user }}'
          POSTGRESQL_DATABASE: '{{ sentry_db_name }}'
      volumes:
          - sentry-pg-data:/var/lib/pgsql/data
  become: true

- name: Pull sentry image
  docker_image:
      name: {{ sentry_container_image }}
  become: true

- include: initialize.yml
  tags:
      - sentry/initialize
  run_once: yes

- name: Load sentry secret key into vars
  shell: cat sentry.key
  register: secret_result
  become: true

- name: Run sentry server
  docker_container:
      name: pipeline-sentry
      image: {{ sentry_container_image }}
      links:
          - sentry-postgres:postgres
          - sentry-redis:redis
      ports:
          - "9000:9000"
      env:
          SENTRY_SECRET_KEY: "'{{ secret_result.stdout }}'"
          SENTRY_DB_NAME: '{{ sentry_db_name }}'
          SENTRY_DB_USER: '{{ sentry_db_user }}'
          SENTRY_DB_PASSWORD: '{{ sentry_db_password }}'
  become: true

- name: Run sentry cron
  docker_container:
      name: sentry-cron
      image: {{ sentry_container_image }}
      links:
          - sentry-postgres:postgres
          - sentry-redis:redis
      env:
          SENTRY_SECRET_KEY: "'{{ secret_result.stdout }}'"
          SENTRY_DB_NAME: '{{ sentry_db_name }}'
          SENTRY_DB_USER: '{{ sentry_db_user }}'
          SENTRY_DB_PASSWORD: '{{ sentry_db_password }}'
      command: run cron
  become: true

- name: Run sentry worker
  docker_container:
      name: sentry-worker-1
      image: {{ sentry_container_image }}
      links:
          - sentry-postgres:postgres
          - sentry-redis:redis
      env:
          SENTRY_SECRET_KEY: "'{{ secret_result.stdout }}'"
          SENTRY_DB_NAME: '{{ sentry_db_name }}'
          SENTRY_DB_USER: '{{ sentry_db_user }}'
          SENTRY_DB_PASSWORD: '{{ sentry_db_password }}'
      command: run worker
  become: true
