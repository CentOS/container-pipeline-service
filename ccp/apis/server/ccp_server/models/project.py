# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from ccp_server.models.base_model_ import Model
from ccp_server import util


class Project(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, app_id: str=None, job_id: str=None, desired_tag: str=None):  # noqa: E501
        """Project - a model defined in Swagger

        :param app_id: The app_id of this Project.  # noqa: E501
        :type app_id: str
        :param job_id: The job_id of this Project.  # noqa: E501
        :type job_id: str
        :param desired_tag: The desired_tag of this Project.  # noqa: E501
        :type desired_tag: str
        """
        self.swagger_types = {
            'app_id': str,
            'job_id': str,
            'desired_tag': str
        }

        self.attribute_map = {
            'app_id': 'app_id',
            'job_id': 'job_id',
            'desired_tag': 'desired_tag'
        }

        self._app_id = app_id
        self._job_id = job_id
        self._desired_tag = desired_tag

    @classmethod
    def from_dict(cls, dikt) -> 'Project':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Project of this Project.  # noqa: E501
        :rtype: Project
        """
        return util.deserialize_model(dikt, cls)

    @property
    def app_id(self) -> str:
        """Gets the app_id of this Project.


        :return: The app_id of this Project.
        :rtype: str
        """
        return self._app_id

    @app_id.setter
    def app_id(self, app_id: str):
        """Sets the app_id of this Project.


        :param app_id: The app_id of this Project.
        :type app_id: str
        """

        self._app_id = app_id

    @property
    def job_id(self) -> str:
        """Gets the job_id of this Project.


        :return: The job_id of this Project.
        :rtype: str
        """
        return self._job_id

    @job_id.setter
    def job_id(self, job_id: str):
        """Sets the job_id of this Project.


        :param job_id: The job_id of this Project.
        :type job_id: str
        """

        self._job_id = job_id

    @property
    def desired_tag(self) -> str:
        """Gets the desired_tag of this Project.


        :return: The desired_tag of this Project.
        :rtype: str
        """
        return self._desired_tag

    @desired_tag.setter
    def desired_tag(self, desired_tag: str):
        """Sets the desired_tag of this Project.


        :param desired_tag: The desired_tag of this Project.
        :type desired_tag: str
        """

        self._desired_tag = desired_tag
