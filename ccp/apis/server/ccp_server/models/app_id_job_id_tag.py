# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from ccp_server.models.base_model_ import Model
from ccp_server import util


class AppIdJobIdTag(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, desired_tag: str=None, build_status: str=None, image: str=None):  # noqa: E501
        """AppIdJobIdTag - a model defined in Swagger

        :param desired_tag: The desired_tag of this AppIdJobIdTag.  # noqa: E501
        :type desired_tag: str
        :param build_status: The build_status of this AppIdJobIdTag.  # noqa: E501
        :type build_status: str
        :param image: The image of this AppIdJobIdTag.  # noqa: E501
        :type image: str
        """
        self.swagger_types = {
            'desired_tag': str,
            'build_status': str,
            'image': str
        }

        self.attribute_map = {
            'desired_tag': 'desired_tag',
            'build_status': 'build_status',
            'image': 'image'
        }

        self._desired_tag = desired_tag
        self._build_status = build_status
        self._image = image

    @classmethod
    def from_dict(cls, dikt) -> 'AppIdJobIdTag':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The AppIdJobIdTag of this AppIdJobIdTag.  # noqa: E501
        :rtype: AppIdJobIdTag
        """
        return util.deserialize_model(dikt, cls)

    @property
    def desired_tag(self) -> str:
        """Gets the desired_tag of this AppIdJobIdTag.


        :return: The desired_tag of this AppIdJobIdTag.
        :rtype: str
        """
        return self._desired_tag

    @desired_tag.setter
    def desired_tag(self, desired_tag: str):
        """Sets the desired_tag of this AppIdJobIdTag.


        :param desired_tag: The desired_tag of this AppIdJobIdTag.
        :type desired_tag: str
        """

        self._desired_tag = desired_tag

    @property
    def build_status(self) -> str:
        """Gets the build_status of this AppIdJobIdTag.


        :return: The build_status of this AppIdJobIdTag.
        :rtype: str
        """
        return self._build_status

    @build_status.setter
    def build_status(self, build_status: str):
        """Sets the build_status of this AppIdJobIdTag.


        :param build_status: The build_status of this AppIdJobIdTag.
        :type build_status: str
        """

        self._build_status = build_status

    @property
    def image(self) -> str:
        """Gets the image of this AppIdJobIdTag.


        :return: The image of this AppIdJobIdTag.
        :rtype: str
        """
        return self._image

    @image.setter
    def image(self, image: str):
        """Sets the image of this AppIdJobIdTag.


        :param image: The image of this AppIdJobIdTag.
        :type image: str
        """

        self._image = image
