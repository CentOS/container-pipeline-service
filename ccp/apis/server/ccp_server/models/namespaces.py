# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from ccp_server.models.base_model_ import Model
from ccp_server.models.meta import Meta  # noqa: F401,E501
from ccp_server import util


class Namespaces(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, meta: Meta=None, namespaces: List[str]=None):  # noqa: E501
        """Namespaces - a model defined in Swagger

        :param meta: The meta of this Namespaces.  # noqa: E501
        :type meta: Meta
        :param namespaces: The namespaces of this Namespaces.  # noqa: E501
        :type namespaces: List[str]
        """
        self.swagger_types = {
            'meta': Meta,
            'namespaces': List[str]
        }

        self.attribute_map = {
            'meta': 'meta',
            'namespaces': 'namespaces'
        }

        self._meta = meta
        self._namespaces = namespaces

    @classmethod
    def from_dict(cls, dikt) -> 'Namespaces':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Namespaces of this Namespaces.  # noqa: E501
        :rtype: Namespaces
        """
        return util.deserialize_model(dikt, cls)

    @property
    def meta(self) -> Meta:
        """Gets the meta of this Namespaces.


        :return: The meta of this Namespaces.
        :rtype: Meta
        """
        return self._meta

    @meta.setter
    def meta(self, meta: Meta):
        """Sets the meta of this Namespaces.


        :param meta: The meta of this Namespaces.
        :type meta: Meta
        """

        self._meta = meta

    @property
    def namespaces(self) -> List[str]:
        """Gets the namespaces of this Namespaces.


        :return: The namespaces of this Namespaces.
        :rtype: List[str]
        """
        return self._namespaces

    @namespaces.setter
    def namespaces(self, namespaces: List[str]):
        """Sets the namespaces of this Namespaces.


        :param namespaces: The namespaces of this Namespaces.
        :type namespaces: List[str]
        """

        self._namespaces = namespaces
